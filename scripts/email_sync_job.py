#!/usr/bin/env python3
"""
Cron job script: ƒê·ªãnh k·ª≥ sync email t·ª´ chat_history v√†o user_chat
Ch·∫°y script n√†y b·∫±ng cron job ƒë·ªÉ t·ª± ƒë·ªông sync
"""
import requests
import json
import logging
from datetime import datetime

# Setup logging
logging.basicConfig(
    filename='email_sync.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def sync_recent_emails():
    """Sync email t·ª´ chat_history trong 24h qua"""
    try:
        print("üîÑ B·∫Øt ƒë·∫ßu sync email t·ª´ chat_history...")
        response = requests.post('http://localhost:8001/api/v1/chat-history/check-and-sync-email')

        if response.status_code == 200:
            result = response.json()
            synced = result.get('synced_records', 0)
            skipped = result.get('skipped_records', 0)
            total = result.get('total_checked', 0)

            message = f"‚úÖ Sync ho√†n th√†nh: {synced} synced, {skipped} skipped, {total} checked"
            print(message)
            logging.info(message)

            return synced > 0  # Return True if any records were synced
        else:
            error_msg = f"‚ùå Sync th·∫•t b·∫°i: {response.status_code} - {response.text}"
            print(error_msg)
            logging.error(error_msg)
            return False

    except Exception as e:
        error_msg = f"‚ùå L·ªói khi sync: {str(e)}"
        print(error_msg)
        logging.error(error_msg)
        return False

def sync_all_pending():
    """Sync t·∫•t c·∫£ records pending (d√πng khi c·∫ßn sync l·∫°i to√†n b·ªô)"""
    try:
        print("üîÑ B·∫Øt ƒë·∫ßu sync t·∫•t c·∫£ pending records...")
        response = requests.post('http://localhost:8001/api/v1/chat-history/sync-all-pending')

        if response.status_code == 200:
            result = response.json()
            synced = result.get('synced_records', 0)
            skipped = result.get('skipped_records', 0)
            total = result.get('total_processed', 0)

            message = f"‚úÖ Full sync ho√†n th√†nh: {synced} synced, {skipped} skipped, {total} processed"
            print(message)
            logging.info(message)

            return True
        else:
            error_msg = f"‚ùå Full sync th·∫•t b·∫°i: {response.status_code} - {response.text}"
            print(error_msg)
            logging.error(error_msg)
            return False

    except Exception as e:
        error_msg = f"‚ùå L·ªói khi full sync: {str(e)}"
        print(error_msg)
        logging.error(error_msg)
        return False

def check_backend_status():
    """Ki·ªÉm tra backend c√≥ ho·∫°t ƒë·ªông kh√¥ng"""
    try:
        response = requests.get('http://localhost:8001/api/v1/chat-history/', timeout=10)
        return response.status_code == 200
    except:
        return False

if __name__ == "__main__":
    print(f"üöÄ Email Sync Job - {datetime.now()}")

    # Ki·ªÉm tra backend
    if not check_backend_status():
        print("‚ùå Backend kh√¥ng ho·∫°t ƒë·ªông!")
        exit(1)

    # Ch·∫°y sync ƒë·ªãnh k·ª≥ (24h)
    success = sync_recent_emails()

    # N·∫øu kh√¥ng c√≥ g√¨ ƒë·ªÉ sync, c√≥ th·ªÉ ch·∫°y full sync 1 l·∫ßn/tu·∫ßn
    # Uncomment d√≤ng d∆∞·ªõi n·∫øu mu·ªën ch·∫°y full sync
    # if not success:
    #     print("üìÖ Ch·∫°y full sync...")
    #     sync_all_pending()

    print("‚úÖ Job ho√†n th√†nh!")
