#!/usr/bin/env python3
"""
Script ƒë·ªÉ t·∫°o b·∫£ng user_chat_sessions trong database
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from supabase_client import supabase

def create_user_chat_sessions_table():
    """
    T·∫°o b·∫£ng user_chat_sessions ƒë·ªÉ l∆∞u tr·ªØ session state c·ªßa user v·ªõi chatflow
    """
    try:
        # SQL ƒë·ªÉ t·∫°o b·∫£ng
        create_table_sql = '''
        CREATE TABLE IF NOT EXISTS user_chat_sessions (
            id SERIAL PRIMARY KEY,
            user_id INTEGER NOT NULL,
            chatflow_id INTEGER NOT NULL,
            conversation_id VARCHAR(255),
            session_data JSONB,
            last_accessed TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),

            -- Foreign key constraints
            CONSTRAINT fk_user_chat_sessions_user
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
            CONSTRAINT fk_user_chat_sessions_chatflow
                FOREIGN KEY (chatflow_id) REFERENCES chatflows(id) ON DELETE CASCADE,

            -- Unique constraint ƒë·ªÉ ƒë·∫£m b·∫£o m·ªói user ch·ªâ c√≥ m·ªôt session v·ªõi m·ªói chatflow
            CONSTRAINT unique_user_chatflow UNIQUE (user_id, chatflow_id)
        );
        '''

        # T·∫°o index ƒë·ªÉ t·ªëi ∆∞u performance
        create_indexes_sql = '''
        CREATE INDEX IF NOT EXISTS idx_user_chat_sessions_user_id ON user_chat_sessions(user_id);
        CREATE INDEX IF NOT EXISTS idx_user_chat_sessions_chatflow_id ON user_chat_sessions(chatflow_id);
        CREATE INDEX IF NOT EXISTS idx_user_chat_sessions_last_accessed ON user_chat_sessions(last_accessed);
        '''

        print("Creating user_chat_sessions table...")

        # Th·ª±c thi SQL t·∫°o b·∫£ng
        result = supabase.rpc('exec_sql', {'sql': create_table_sql})
        print("‚úì Table created successfully")

        # Th·ª±c thi SQL t·∫°o index
        result = supabase.rpc('exec_sql', {'sql': create_indexes_sql})
        print("‚úì Indexes created successfully")

        print("\nüéâ user_chat_sessions table setup completed!")
        print("\nTable structure:")
        print("- id: Primary key")
        print("- user_id: Foreign key to users table")
        print("- chatflow_id: Foreign key to chatflows table")
        print("- conversation_id: ID c·ªßa cu·ªôc h·ªôi tho·∫°i (t·ª´ Dify)")
        print("- session_data: D·ªØ li·ªáu session b·ªï sung (JSON)")
        print("- last_accessed: Th·ªùi gian truy c·∫≠p cu·ªëi c√πng")
        print("- created_at: Th·ªùi gian t·∫°o")
        print("- updated_at: Th·ªùi gian c·∫≠p nh·∫≠t cu·ªëi c√πng")

    except Exception as e:
        print(f"‚ùå Error creating table: {str(e)}")
        return False

    return True

if __name__ == "__main__":
    print("üöÄ Setting up user_chat_sessions table...")
    success = create_user_chat_sessions_table()
    if success:
        print("\n‚úÖ Setup completed successfully!")
    else:
        print("\n‚ùå Setup failed!")
        sys.exit(1)
