#!/usr/bin/env python3
"""
Script ƒë·ªÉ ch·∫°y l·∫°i SQL policies cho Supabase Storage bucket minhchung_chiphi
"""
import sys
import os
sys.path.append(os.path.dirname(__file__))

from supabase_client import supabase

def recreate_storage_policies():
    """T·∫°o l·∫°i policies cho bucket minhchung_chiphi"""
    try:
        print("üöÄ B·∫Øt ƒë·∫ßu t·∫°o l·∫°i policies cho bucket minhchung_chiphi...")

        # X√≥a policies c≈© n·∫øu t·ªìn t·∫°i
        drop_policies_sql = '''
        -- Drop existing policies if they exist
        DROP POLICY IF EXISTS "Users can upload expense images" ON storage.objects;
        DROP POLICY IF EXISTS "Users can view expense images" ON storage.objects;
        DROP POLICY IF EXISTS "Users can update expense images" ON storage.objects;
        DROP POLICY IF EXISTS "Users can delete expense images" ON storage.objects;
        '''
        supabase.rpc('exec_sql', {'sql': drop_policies_sql})
        print("‚úÖ ƒê√£ x√≥a policies c≈©")

        # T·∫°o l·∫°i policies m·ªõi
        create_policies_sql = '''
        -- Create policies for minhchung_chiphi bucket
        CREATE POLICY "Users can upload expense images" ON storage.objects
        FOR INSERT WITH CHECK (bucket_id = 'minhchung_chiphi');

        CREATE POLICY "Users can view expense images" ON storage.objects
        FOR SELECT USING (bucket_id = 'minhchung_chiphi');

        CREATE POLICY "Users can update expense images" ON storage.objects
        FOR UPDATE USING (bucket_id = 'minhchung_chiphi');

        CREATE POLICY "Users can delete expense images" ON storage.objects
        FOR DELETE USING (bucket_id = 'minhchung_chiphi');
        '''
        supabase.rpc('exec_sql', {'sql': create_policies_sql})
        print("‚úÖ ƒê√£ t·∫°o policies m·ªõi")

        print("‚úÖ Ho√†n th√†nh! Policies ƒë√£ ƒë∆∞·ª£c t·∫°o l·∫°i th√†nh c√¥ng.")

    except Exception as e:
        print(f"‚ùå L·ªói: {str(e)}")

if __name__ == "__main__":
    recreate_storage_policies()
